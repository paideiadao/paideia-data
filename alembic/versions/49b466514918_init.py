"""init

Revision ID: 49b466514918
Revises: 
Create Date: 2022-10-15 09:16:47.759833

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '49b466514918'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('distributions')
    op.drop_table('airdrop_validated_fields')
    op.drop_table('user_profile_settings')
    op.drop_table('token_holders')
    op.drop_table('tokenomics')
    op.drop_table('dao_themes')
    op.drop_table('proposal_comments')
    op.drop_table('distribution_token_holders')
    op.drop_table('activity_log')
    op.drop_table('proposals')
    op.drop_table('distribution_config')
    op.drop_table('user_followers')
    op.drop_table('governances')
    op.drop_table('footer_social_links')
    op.drop_table('blogs')
    op.drop_table('ergo_addresses')
    op.drop_index('jwt_blacklist_token_idx', table_name='jwt_blacklist')
    op.drop_index('jwt_blacklist_token_idx1', table_name='jwt_blacklist')
    op.drop_table('jwt_blacklist')
    op.drop_table('proposal_followers')
    op.drop_table('dao_designs')
    op.drop_table('users')
    op.drop_table('notifications')
    op.drop_table('proposal_references')
    op.drop_table('proposal_likes')
    op.drop_table('tokenomics_token_holders')
    op.drop_table('proposal_addendums')
    op.drop_table('daos')
    op.drop_table('user_details')
    op.drop_table('proposal_comments_likes')
    op.drop_table('governance_whitelist')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('governance_whitelist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('governance_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ergo_address_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ergo_address_id'], ['ergo_addresses.id'], name='governance_whitelist_ergo_address_id_fkey'),
    sa.ForeignKeyConstraint(['governance_id'], ['governances.id'], name='governance_whitelist_governance_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='governance_whitelist_pkey')
    )
    op.create_table('proposal_comments_likes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('comment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_details_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('liked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['proposal_comments.id'], name='proposal_comments_likes_comment_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_details_id'], ['user_details.id'], name='proposal_comments_likes_user_details_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='proposal_comments_likes_pkey')
    )
    op.create_table('user_details',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('profile_img_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('level', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('xp', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('social_links', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=True),
    sa.Column('dao_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dao_id'], ['daos.id'], name='user_details_dao_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_details_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_details_pkey')
    )
    op.create_table('daos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('daos_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('dao_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('dao_short_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dao_url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('governance_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tokenomics_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('design_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_draft', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_published', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('nav_stage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_review', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='daos_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('proposal_addendums',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('proposal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposals.id'], name='proposal_addendums_proposal_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='proposal_addendums_pkey')
    )
    op.create_table('tokenomics_token_holders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token_holder_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tokenomics_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['token_holder_id'], ['token_holders.id'], name='tokenomics_token_holders_token_holder_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tokenomics_id'], ['tokenomics.id'], name='tokenomics_token_holders_tokenomics_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tokenomics_token_holders_pkey')
    )
    op.create_table('proposal_likes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('proposal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('liked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposals.id'], name='proposal_likes_proposal_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='proposal_likes_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='proposal_likes_pkey')
    )
    op.create_table('proposal_references',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('referred_proposal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('referring_proposal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['referred_proposal_id'], ['proposals.id'], name='proposal_references_referred_proposal_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['referring_proposal_id'], ['proposals.id'], name='proposal_references_referring_proposal_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='proposal_references_pkey')
    )
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('img', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('action', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('proposal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('href', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('additional_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposals.id'], name='notifications_proposal_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='notifications_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('alias', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('primary_wallet_address_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['primary_wallet_address_id'], ['ergo_addresses.id'], name='users_primary_wallet_address_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('alias', name='users_alias_key'),
    sa.UniqueConstraint('primary_wallet_address_id', name='users_primary_wallet_address_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('dao_designs',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('dao_designs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('dao_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('theme_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('logo_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('show_banner', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('banner_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('show_footer', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('footer_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dao_id'], ['daos.id'], name='dao_designs_dao_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['theme_id'], ['dao_themes.id'], name='dao_designs_theme_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='dao_designs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('proposal_followers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('proposal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposals.id'], name='proposal_followers_proposal_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='proposal_followers_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='proposal_followers_pkey')
    )
    op.create_table('jwt_blacklist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='jwt_blacklist_pkey')
    )
    op.create_index('jwt_blacklist_token_idx1', 'jwt_blacklist', ['token'], unique=False)
    op.create_index('jwt_blacklist_token_idx', 'jwt_blacklist', ['token'], unique=False)
    op.create_table('ergo_addresses',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('ergo_addresses_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_smart_contract', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ergo_addresses_pkey'),
    sa.UniqueConstraint('address', name='ergo_addresses_address_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('blogs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('link', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('img_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('additional_details', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='blogs_pkey'),
    sa.UniqueConstraint('link', name='blogs_link_key'),
    sa.UniqueConstraint('name', name='blogs_name_key')
    )
    op.create_table('footer_social_links',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('design_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('social_network', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('link_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['design_id'], ['dao_designs.id'], name='footer_social_links_design_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='footer_social_links_pkey')
    )
    op.create_table('governances',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dao_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_optimistic', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_quadratic_voting', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('time_to_challenge__sec', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quorum', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vote_duration__sec', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('currency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('support_needed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dao_id'], ['daos.id'], name='governances_dao_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='governances_pkey')
    )
    op.create_table('user_followers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('follower_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('followee_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['followee_id'], ['users.id'], name='user_followers_followee_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], name='user_followers_follower_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_followers_pkey')
    )
    op.create_table('distribution_config',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('distribution_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('property_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('property_value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('property_data_type', sa.TEXT(), server_default=sa.text("'str'::text"), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['distribution_id'], ['distributions.id'], name='distribution_config_distribution_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='distribution_config_pkey')
    )
    op.create_table('proposals',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('proposals_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('dao_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('voting_system', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('actions', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=True),
    sa.Column('attachments', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('is_proposal', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dao_id'], ['daos.id'], name='proposals_dao_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='proposals_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('activity_log',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('img_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('action', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('secondary_action', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('secondary_value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('category', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='activity_log_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='activity_log_pkey')
    )
    op.create_table('distribution_token_holders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token_holder_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('distribution_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['distribution_id'], ['distributions.id'], name='distribution_token_holders_distribution_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['token_holder_id'], ['token_holders.id'], name='distribution_token_holders_token_holder_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='distribution_token_holders_pkey')
    )
    op.create_table('proposal_comments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('proposal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('parent', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent'], ['proposal_comments.id'], name='proposal_comments_parent_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposals.id'], name='proposal_comments_proposal_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='proposal_comments_pkey')
    )
    op.create_table('dao_themes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='dao_themes_pkey')
    )
    op.create_table('tokenomics',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tokenomics_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('dao_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('token_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('token_ticker', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('token_amount', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('token_image_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('token_remaining', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('is_activated', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dao_id'], ['daos.id'], name='tokenomics_dao_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tokenomics_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('token_holders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ergo_address_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('percentage', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('balance', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ergo_address_id'], ['ergo_addresses.id'], name='token_holders_ergo_address_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='token_holders_pkey')
    )
    op.create_table('user_profile_settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('settings', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=True),
    sa.Column('dao_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dao_id'], ['daos.id'], name='user_profile_settings_dao_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_profile_settings_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_profile_settings_pkey')
    )
    op.create_table('airdrop_validated_fields',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('distribution_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['distribution_id'], ['distributions.id'], name='airdrop_validated_fields_distribution_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='airdrop_validated_fields_pkey')
    )
    op.create_table('distributions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tokenomics_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('distribution_type', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('balance', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('percentage', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tokenomics_id'], ['tokenomics.id'], name='distributions_tokenomics_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='distributions_pkey')
    )
    # ### end Alembic commands ###
